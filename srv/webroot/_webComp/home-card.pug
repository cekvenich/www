template#xhome-card
	style.

		.home-card, #dhome-card {
			height: 250px;
			width: 350px;
			border-radius: 3px;
			background-color: gray;
			overflow: hidden;
			cursor: pointer;
			box-shadow: 0 2px 3px rgba(0,0,0,0.4);
			display: inline-table;
			margin: 7px;
		}

		.homeCard a, .homeCard a:visited,
		.homeCard a:hover, .homeCard a:active {
			text-decoration: none;
		}

		.hc--img {
			height: 210px;
			width: 350px;
			background-position: left top;
			background-size: cover;
			background-repeat: no-repeat;
		}

		.hc--headline {
			padding: 6px;
			background-color: white;
		}

		home-card:hover{
			box-shadow: 0 3px 4px rgba(0,0,0,0.7);
		}
	
	#dhome-card.homeCard

script#shome-card(type='text/x-dot-template').
	<a href='{{=it.ref}}')> 
		<div class='hc--img' style='background-image:url({{=it.img }})'></div>
		<div class='hc--headline'>{{=it.headline}}</div>
	</a>

script.
	class HomeCard extends HTMLElement {
		constructor() {
			super()
			console.log('v2')
			this._shadowRoot = this.attachShadow({mode: 'open'})
			const t = document.querySelector('#xhome-card')// add the dom above
			const instance = t.content.cloneNode(true)
			this._shadowRoot.appendChild(instance)
		}//()
		attributeChangedCallback(attrName, oldValue, newVal) {
			this[attrName] = newVal
		}
		static get observedAttributes() {
			return ['headline', 'ref', 'img']
		}

		connectedCallback() {
			var tpl1 = document.getElementById('shome-card').text
			var tpl1Foo = doT.template(tpl1)
			var data = {'ref': this.ref, 'headline': this.headline, 'img': this.img}
			var res = tpl1Foo(data)
			//console.log(res)
			const d = this.shadowRoot.querySelector('#dhome-card', this)//ctx
			d.innerHTML=res
		}

	}//class

	/*
	$(document).ready(function () {

		TT.clearUrl()

		$(window).on('popstate', function (e) {//back button
			var state = e.originalEvent.state
			if (state !== null) {
				e.preventDefault()
				TT.loadPg(state.url)
			}
		})//()

		$(document).on('click', 'a', function (e) {//prevent
			var $anchor = $(e.currentTarget)
			var href = $anchor.prop('href')
			//console.log(href)
			if(! href || href.length < 1) {
				return
			}
			if(TT.isHash(href)) {
				TT.clearUrl()
				console.log('#')
				return
			}
			if(TT.isExternal(href)) {
				console.log('bye')
				return
			}

			//e.stopPropagation()
			e.preventDefault()
			TT._clickAnchor(href)
		})//()
		console.log('TT loaded')
	})
	*/