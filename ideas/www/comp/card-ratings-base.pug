
template(name='comp')
	style
		:sass
			:host
				color: blue
			.star-icon
				color: gray
				font-size: 30px
				position: relative
			.star-icon.fill:before
				color: yellow
				content: '\2605' // full star
				font-size: 32px
				text-shadow: 5px 2px 2px gray
				position: absolute
				left: -4px
				top: -6px

	.ratings--starts
		span#s1.star-icon.fill ☆
		span#s2.star-icon ☆
		span#s3.star-icon ☆
		span#s4.star-icon ☆
	.ratings--date
		span Released:
		span#dat 1/1/1

	include _mix.pug

script.
	var	_mainDoc = document

	function stars(compCtx, el) {
		var elN = compCtx.elHost.querySelector('#s'+el)
		//var elN = _mainDoc.querySelector('card-ratings::shadow #s'+el)
		elN.className += ' fill'
		return elN
	}

	function regCompClass(compCtx, tag ) {
		// boillerplate - could be moved to a .js class
		console.log(tag)
		var tdoc = document.currentScript.ownerDocument
		var t = tdoc.querySelector('template[name="comp"]')

		compCtx.createdCallback = function() { // after reg - it's created
			//var id=$(this).attr('id')
			//console.log('comp: ' + id)
			var clone = _mainDoc.importNode(t.content, true)

			compCtx.elHost =this.createShadowRoot()
			compCtx.elHost.appendChild(clone) // put it in dom
		}

		compCtx.attributeChangedCallback = function(name, oldVal, newVal) {
			console.log(name+newVal)
			stars(compCtx, newVal)
		}

		document.registerElement(tag, { // new element self register w/ parent doc: must have '-''
			prototype: compCtx
		})

	}//()


block e_src
